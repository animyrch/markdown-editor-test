1/ Figma file shows a textarea for the content editing section (as understood by the resize icon at bottom right). However, some text (tags) in the textarea are colored. This cannot be done in a textarea. Either, we would need to implement a contenteditable=true div (which would have a lot of shortcomings) or better yet, use a WYSIWYG editor library (but that would defeat the purpose of this exercise so I didn't do it).

2/ Figma file only shows a content editing section (first with default Markdown text inside and then while it is empty with the default placeholder). However, from the explanations of the exercise, I feel like there needs to be a content rendering section to see the output of the Markdown. For the moment, I will just render the output below the content editing section in real time.

3/ Figma file seems to imply that using underscores on both sides of a word makes an underline. Hovewer, this is not possible according to Markdown specification and no markdown editor does this since underlining alltogether is not recommended in Markdown conventions to prevent confusion with links which are automatically underlined. Underscores on both sides is an alternative way to italicise in Markdown. So, I am keeping the word underlined according to the Mockup but it will be italicised.

4/ Mockup shows a usage of [col-left] and [col-right] tags as separate from [table] and [table-row] tags but they are also used inside a [table-row]. At first glance, I would have thought that columns would give a table-like presentation (since text inside says 'content in the left / right column'). If that is true, why do we need table and table row tags ? If it is not the case, what do [col-right] and [col-left] tags do ? What is the presentation like and how is it different from a table presentation ? A rendered view mockup would help a lot to carry out this task.

5/ I am not sure about this section => "Better class list."

6/ The 'file insertion' option seems a bit strage to me since a 'file' can be literally anything including an image or video for which there are already dedicated buttons. Each file type will have their own requirements and capabilities for being presented in a webpage. Do we mean insert a link to a file ? Yet, there is already a link button.

7/ There is a dedicated editor option called 'Button'. Inserting a simple button is a piece of cake but what will the button do ? What kind of approach we are going to take to inject behaviour to a button ? These things can change the whole implementation.